name: Publish to NPM

on:
  push:
    branches: [ main ]
    paths:
      - 'packages/**'
      - '.github/workflows/npm-publish.yml'
  workflow_dispatch:
    inputs:
      channel:
        description: 'Release channel (latest or canary)'
        required: true
        default: 'latest'
        type: choice
        options:
          - latest
          - canary

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Setup Node.js (for npm registry)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run typecheck
        run: |
          bun --filter="*" run typecheck

      - name: Build packages
        run: bun run build

      - name: Version and publish UI
        if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'ui:') }}
        run: |
          cd packages/ui
          if [ "${{ github.event.inputs.channel }}" = "canary" ]; then
            bun pm version prerelease --preid canary --no-git-tag-version
            npm publish --tag canary --access public
          else
            bun pm version patch --no-git-tag-version
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Version and publish Core
        if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'core:') }}
        run: |
          cd packages/core
          if [ "${{ github.event.inputs.channel }}" = "canary" ]; then
            bun pm version prerelease --preid canary --no-git-tag-version
            npm publish --tag canary --access public
          else
            bun pm version patch --no-git-tag-version
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push version changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git push origin main